[gd_scene load_steps=4 format=3 uid="uid://cs46j3e8haq55"]

[sub_resource type="GDScript" id="GDScript_unxjj"]
script/source = "extends CharacterBody3D
@onready var camera = $Camera3D

const SPEED = 5.0 #10
const JUMP_VELOCITY = 4.5 #10

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")
#var gravity=20
func _ready():
	Input.mouse_mode= Input.MOUSE_MODE_CAPTURED

func _unhandled_input(event):
	if event is InputEventMouseMotion:
		rotate_y(-event.relative.x*0.005)
		camera.rotate_x(-event.relative.y*0.005)
		camera.rotation.x=clamp(camera.rotation.x,-PI/2,PI/2)

func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_ntvwj"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_4cshj"]

[node name="Player" type="CharacterBody3D"]
script = SubResource("GDScript_unxjj")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
mesh = SubResource("CapsuleMesh_ntvwj")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("CapsuleShape3D_4cshj")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.48586, 0)
